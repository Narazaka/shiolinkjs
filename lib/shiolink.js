// Generated by CoffeeScript 1.7.1

/* (C) 2014 Narazaka : Licensed under The MIT License - http://narazaka.net/license/MIT?2014 */
var Engine, ShiolinkJS, ShioriJK;

if (typeof require !== "undefined" && require !== null) {
  ShioriJK = require('shiorijk');
}

ShiolinkJS = (function() {
  function ShiolinkJS(engine) {
    this.engine = engine;
    this.request_parser = new ShioriJK.Shiori.Request.Parser();
    this.state = 'shiolink';
  }

  ShiolinkJS.prototype.shiolink_state = {
    L: 'load',
    R: 'request',
    U: 'unload'
  };

  ShiolinkJS.prototype.shiolink_load = function(directory) {
    if (this.engine.load != null) {
      this.engine.load(directory);
    }
  };

  ShiolinkJS.prototype.shiolink_request = function(id) {
    this.state = 'request';
    return "*S:" + id + "\r\n";
  };

  ShiolinkJS.prototype.shiolink_unload = function() {
    if (this.engine.unload != null) {
      return this.engine.unload();
    }
  };

  ShiolinkJS.prototype.add_chunk = function(chunk) {
    var lines;
    lines = chunk.split(/\r\n/);
    if (chunk.match(/\r\n$/)) {
      lines.pop();
    }
    return this.add_lines(lines);
  };

  ShiolinkJS.prototype.add_lines = function(lines) {
    var line, result, results, _i, _len;
    results = [];
    for (_i = 0, _len = lines.length; _i < _len; _i++) {
      line = lines[_i];
      result = null;
      if (result = this.add_line(line)) {
        results.push(result);
      }
    }
    return results.join('');
  };

  ShiolinkJS.prototype.add_line = function(line) {
    var parser_result, response, result;
    switch (this.state) {
      case 'shiolink':
        if (result = line.match(/^\*(L|S|U):(.*)$/)) {
          switch (result[1]) {
            case 'L':
              return this.shiolink_load(result[2]);
            case 'S':
              return this.shiolink_request(result[2]);
            case 'U':
              return this.shiolink_unload(result[2]);
          }
        }
        break;
      case 'request':
        parser_result = this.request_parser.parse_line(line);
        if (parser_result.state === 'end') {
          this.state = 'shiolink';
          response = this.engine.request(parser_result.result);
          return "" + response;
        }
    }
  };

  return ShiolinkJS;

})();

Engine = (function() {
  function Engine() {}

  Engine.prototype.load = function(dllpath) {};

  Engine.prototype.request = function(request) {};

  Engine.prototype.unload = function() {};

  return Engine;

})();

if ((typeof module !== "undefined" && module !== null) && (module.exports != null)) {
  module.exports = ShiolinkJS;
}

//# sourceMappingURL=shiolink.map
